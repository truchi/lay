////////////////////////////////////////////////////////////////////////////////
// ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ This file is @generated by build script. ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ğŸš¨ //
// ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§           â›” DO NOT MODIFY! â›”           ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ //
////////////////////////////////////////////////////////////////////////////////

use crate::*;

/// A trait for getting `Option`al attributes on styled types.
pub trait StylerIndex {
    /// Gets `Option<Foreground>`.
    fn get_foreground(&self) -> Option<Foreground>;

    /// Gets `Option<Background>`.
    fn get_background(&self) -> Option<Background>;

    /// Gets `Option<Weight>`.
    fn get_weight(&self) -> Option<Weight>;

    /// Gets `Option<Slant>`.
    fn get_slant(&self) -> Option<Slant>;

    /// Gets `Option<Underline>`.
    fn get_underline(&self) -> Option<Underline>;

    /// Gets `Option<Strike>`.
    fn get_strike(&self) -> Option<Strike>;

    /// Gets `Option<Overline>`.
    fn get_overline(&self) -> Option<Overline>;

    /// Gets `Option<Invert>`.
    fn get_invert(&self) -> Option<Invert>;

    /// Gets `Option<Blink>`.
    fn get_blink(&self) -> Option<Blink>;

    /// Gets `Option<Border>`.
    fn get_border(&self) -> Option<Border>;

    fn style(&self) -> Style {
        Self {
            Foreground: self.get_foreground(),
            Background: self.get_background(),
            Weight:     self.get_weight(),
            Slant:      self.get_slant(),
            Underline:  self.get_underline(),
            Strike:     self.get_strike(),
            Overline:   self.get_overline(),
            Invert:     self.get_invert(),
            Blink:      self.get_blink(),
            Border:     self.get_border(),
        }
    }
}
